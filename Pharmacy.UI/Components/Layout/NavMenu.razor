<nav class="flex-column @(Open ? "" : "closed")">
    <div class="nav-item px-3">
        <NavLink class="nav-link" style="@(Open ? "" : "padding: 0rem;")" href="" Match="NavLinkMatch.All">
            <span class="bi bi-house-door-fill-nav-menu @(Open ? "" : "closed")" aria-hidden="true"></span>
            <span class="nav-text @(Open ? "" : "hidden")">Home</span>
        </NavLink>
    </div>

    <div class="nav-item px-3">
        <NavLink class="nav-link" style="@(Open ? "" : "padding: 0rem;")" href="counter">
            <span class="bi bi-plus-square-fill-nav-menu @(Open ? "" : "closed")" aria-hidden="true"></span>
            <span class="nav-text @(Open ? "" : "hidden")">Counter</span>
        </NavLink>
    </div>

    <div class="nav-item px-3">
        <NavLink class="nav-link" style="@(Open ? "" : "padding: 0rem;")" href="weather">
            <span class="bi bi-list-nested-nav-menu @(Open ? "" : "closed")" aria-hidden="true"></span>
            <span class="nav-text @(Open ? "" : "hidden")">Weather</span>
        </NavLink>
    </div>

    <div class="nav-item px-3">
        <NavLink class="nav-link" style="@(Open ? "" : "padding: 0rem;")" href="products">
            <span class="bi bi-list-nested-nav-menu @(Open ? "" : "closed")" aria-hidden="true"></span>
            <span class="nav-text @(Open ? "" : "hidden")">Products</span>
        </NavLink>
    </div>
</nav>

@code
{
    [Parameter]
    public bool Open {get; set;}

    [Parameter]
    public EventCallback<bool> OpenChanged { get; set; }

    private void ToggleOpen()
    {
        Open = !Open;
        OpenChanged.InvokeAsync(Open);
    }
}
